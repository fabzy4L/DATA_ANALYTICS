RSID
RSID
dna<-read.csv('/Users/f4L/Library/Containers/com.microsoft.Excel/Data/Downloads/DNA/FAP_RAW_DNA.csv')
dna<-read.csv('/Users/f4L/Library/Containers/com.microsoft.Excel/Data/Downloads/DNA/FAP_RAW_DNA.csv')
dna<-read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/FAP_RAW_DNA.csv)
RSID <- dna$RSID
CHROMOSOME <- dna$CHROMOSOME
POSITION <- dna$POSITION
RESULT <- dna$RESULT
dna
#HOW CAN I FIND RSID IN NCBI
dna<-read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/FAP_RAW_DNA.csv')
RSID <- dna$RSID
CHROMOSOME <- dna$CHROMOSOME
POSITION <- dna$POSITION
RESULT <- dna$RESULT
dna
#HOW CAN I FIND RSID IN NCBI
RSID
write.csv(RSID.csv)
write.txt(RSID, file='/Users/admin/new_file.txt')
RSID1<- data.frame(RSID)
write.txt(RSID, file='/Users/admin/new_file.txt')
RSID1<- data.frame(RSID)
write.txt(RSID1, file='/Users/admin/new_file.txt')
RSID1<- data.frame(RSID)
RSID1
write.txt(RSID1, file='/Users/admin/new_file.txt')
RSID1<- data.frame(RSID)
RSID1
write.txt(RSID1, file='/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID1.txt')
RSID1<- data.frame(RSID)
RSID1
write.csv(RSID1, file='/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID1.txt')
RSID2<- RSID)
RSID2<- RSID
RSID2
write.csv(RSID2, file='/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.txt')
RSID2<- string(RSID)
RSID2<- as.character(RSID)
RSID2
write.csv(RSID2, file='/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.csv')
RSID2<- as.character(RSID)
RSID2
#write.csv(RSID2, file='/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.csv')
RSID2<- data.frame(RSID)
RSID2
#write.csv(RSID2, file='/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.csv')
RSID2<- data.frame(RSID)
RSID2
#write.csv(RSID2, file='/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.csv')
RSID2<- data.frame(RSID)
RSID2
write.csv(RSID2, file='/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.csv')
RSID2<- data.frame(RSID)
RSID2
write.csv(RSID2, file='/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.csv',row.names=FALSE))
RSID2<- data.frame(RSID)
RSID2
write.csv(RSID2, file='/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.csv',row.names=FALSE)
RSID2<- data.frame(RSID)
RSID2
write.csv(RSID2, file='/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.txt',row.names=FALSE)
RSID2<- data.frame(RSID)
RSID2
write.csv(RSID2, file='/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.txt',row.names=FALSE,na='')
RSID2<- data.frame(RSID)
RSID2
write.csv(RSID2, file='/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.txt',row.names=FALSE,na='', quote=FALSE)
biomaRt::listMarts()
biomaRt::listMarts()
ensembl <- usemMart(ENSEMBL_MART_ENSEMBL)
biomaRt::listMarts()
ensembl=useMart("ENSEMBL_MART_SNP")
biomaRt::listMarts()
ensembl=useMart("ENSEMBL_MART_SNP")
biomaRt::listMarts()
ensembl=biomaRt::useMart("ENSEMBL_MART_SNP")
df <- biomaRt::listDatasets(ensembl)
df
#ensembl=useMart("ENSEMBL_MART_SNP")
library(biomaRt)
biomaRt::listMarts()
ensembl=useMart("ENSEMBL_MART_SNP")
df <- listDatasets(ensembl)
df
#ensembl=useMart("ENSEMBL_MART_SNP")
library(biomaRt)
listMarts()
ensembl=useMart("ENSEMBL_MART_SNP")
df <- listDatasets(ensembl)
df
hsapiens_snp
library(biomaRt)
listMarts()
ensembl=useMart("ENSEMBL_MART_SNP")
df <- listDatasets(ensembl)
df
#hsapiens_snp
#ensembl=useMart("ENSEMBL_MART_SNP")
library(biomaRt)
listMarts()
listDatasets(ensembl)
#hsapiens_snp
#ensembl=useMart("ENSEMBL_MART_SNP", dataset= "hsapiens_snp")
library(biomaRt)
listMarts()
listDatasets(ENSEMBL_MART_ENSEMBL	)
library(biomaRt)
listMarts()
listDatasets("ENSEMBL_MART_ENSEMBL")
library(biomaRt)
listMarts()
listDatasets(mart=ENSEMBL_MART_ENSEMBL)
library(biomaRt)
listMarts()
listDatasets(mart="ENSEMBL_MART_ENSEMBL"")
#hsapiens_snp
#ensembl=useMart("ENSEMBL_MART_SNP", dataset= "hsapiens_snp")
library(biomaRt)
listMarts()
ensembl <- useMart("ENSEMBL_MART_ENSEMBL")
listDatasets(ensembl)
#hsapiens_snp
#ensembl=useMart("ENSEMBL_MART_SNP", dataset= "hsapiens_snp")
library(biomaRt)
#listMarts()
ensembl <- useMart("ENSEMBL_MART_ENSEMBL")
listDatasets(ensembl)
#hsapiens_snp
#ensembl=useMart("ENSEMBL_MART_SNP", dataset= "hsapiens_snp")
library(biomaRt)
#listMarts()
ensembl <- useMart("ENSEMBL_MART_SNP")
listDatasets(ensembl)
#hsapiens_snp
#ensembl=useMart("ENSEMBL_MART_SNP", dataset= "hsapiens_snp")
library(biomaRt)
#listMarts()
#ensembl <- useMart("ENSEMBL_MART_SNP")
#listDatasets(ensembl)
ensembl=useMart("ENSEMBL_MART_SNP", dataset= "hsapiens_snp")
library(biomaRt)
#listMarts()
#ensembl <- useMart("ENSEMBL_MART_SNP")
#listDatasets(ensembl)
ensembl=useMart("ENSEMBL_MART_SNP", dataset= "hsapiens_snp")
myfilters <- listFilters(ensembl)
View(myfilters)
View(myfilters)
library(biomaRt)
#Get all the marts names
#listMarts()
#select a mart to obtain dataset
#ensembl <- useMart("ENSEMBL_MART_SNP")
#Dataset obtained
#listDatasets(ensembl)
#Choose Mart & Dataset so we can set filters
ensembl=useMart("ENSEMBL_MART_SNP", dataset= "hsapiens_snp")
#create filter list so we can check criteria
myfilters <- listFilters(ensembl)
#Make a vector for the filter
filter1 <- 'snp_filter'
#Attributes
attributes1 <- listAttributes(ensembl)
RSID
rsdf <- read.csv(RSID2, file='/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.txt',row.names=FALSE,na='', quote=FALSE)
rsdf <- read.csv(RSID2, file='/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.txt',row.names=FALSE,na='', quote=FALSE)
rsdf <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.txt',row.names=FALSE,na='', quote=FALSE)
rsdf <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.txt')
rsdf
library(biomaRt)
#Get all the marts names
#listMarts()
#select a mart to obtain dataset
#ensembl <- useMart("ENSEMBL_MART_SNP")
#Dataset obtained
#listDatasets(ensembl)
#Choose Mart & Dataset so we can set filters
ensembl=useMart("ENSEMBL_MART_SNP", dataset= "hsapiens_snp")
#create filter list so we can check criteria
myfilters <- listFilters(ensembl)
#Make a vector for the filter
filter1 <- 'snp_filter'
#Attributes
attributes1 <- listAttributes(ensembl)
#att1 <- c('refsnp_id", 'minor_allele', 'minor_allele_frequency')
View(attributes1)
View(attributes1)
library(biomaRt)
#Get all the marts names
#listMarts()
#select a mart to obtain dataset
#ensembl <- useMart("ENSEMBL_MART_SNP")
#Dataset obtained
#listDatasets(ensembl)
#Choose Mart & Dataset so we can set filters
ensembl=useMart("ENSEMBL_MART_SNP", dataset= "hsapiens_snp")
#create filter list so we can check criteria
myfilters <- listFilters(ensembl)
#Make a vector for the filter
filter1 <- 'snp_filter'
#Attributes
attributes1 <- listAttributes(ensembl)
att1 <- c('refsnp_id', 'minor_allele', 'minor_allele_frequency','phenotype_name','phenotype_description' )
library(biomaRt)
#Get all the marts names
#listMarts()
#select a mart to obtain dataset
#ensembl <- useMart("ENSEMBL_MART_SNP")
#Dataset obtained
#listDatasets(ensembl)
#Choose Mart & Dataset so we can set filters
ensembl=useMart("ENSEMBL_MART_SNP", dataset= "hsapiens_snp")
#create filter list so we can check criteria
myfilters <- listFilters(ensembl)
#Make a vector for the filter
filter1 <- 'snp_filter'
#Attributes
attributes1 <- listAttributes(ensembl)
att1 <- c('refsnp_id', 'minor_allele', 'minor_allele_frequency','phenotype_name','phenotype_description' )
rsdf <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.txt')
rsdf
searchResults <- getBM(att1,
filters=filter1,
values=rsdf, mart=ensembl)
library(biomaRt)
#Get all the marts names
#listMarts()
#select a mart to obtain dataset
#ensembl <- useMart("ENSEMBL_MART_SNP")
#Dataset obtained
#listDatasets(ensembl)
#Choose Mart & Dataset so we can set filters
ensembl=useMart("ENSEMBL_MART_SNP", dataset= "hsapiens_snp")
#create filter list so we can check criteria
myfilters <- listFilters(ensembl)
#Make a vector for the filter
filter1 <- 'snp_filter'
#Attributes
attributes1 <- listAttributes(ensembl)
att1 <- c('refsnp_id', 'minor_allele', 'minor_allele_frequency','phenotype_name','phenotype_description' )
rsdf <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.txt')
rsdf
searchResults <- getBM(attributes=att1,
filters=filter1,
values=rsdf, mart=ensembl)
library(biomaRt)
#Get all the marts names
#listMarts()
#select a mart to obtain dataset
#ensembl <- useMart("ENSEMBL_MART_SNP")
#Dataset obtained
#listDatasets(ensembl)
#Choose Mart & Dataset so we can set filters
ensembl=useMart("ENSEMBL_MART_SNP", dataset= "hsapiens_snp")
#create filter list so we can check criteria
myfilters <- listFilters(ensembl)
#Make a vector for the filter
filter1 <- 'snp_filter'
#Attributes
attributes1 <- listAttributes(ensembl)
att1 <- c('refsnp_id', 'minor_allele', 'minor_allele_frequency','phenotype_name','phenotype_description' )
rsdf1 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.txt')
rsdf <- rsdf1[1:200]
library(biomaRt)
#Get all the marts names
#listMarts()
#select a mart to obtain dataset
#ensembl <- useMart("ENSEMBL_MART_SNP")
#Dataset obtained
#listDatasets(ensembl)
#Choose Mart & Dataset so we can set filters
ensembl=useMart("ENSEMBL_MART_SNP", dataset= "hsapiens_snp")
#create filter list so we can check criteria
myfilters <- listFilters(ensembl)
#Make a vector for the filter
filter1 <- 'snp_filter'
#Attributes
attributes1 <- listAttributes(ensembl)
att1 <- c('refsnp_id', 'minor_allele', 'minor_allele_frequency','phenotype_name','phenotype_description' )
rsdf1 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.txt')
rsdf <- rsdf1[1:200,]
rsdf
searchResults <- getBM(attributes=att1,
filters=filter1,
values=rsdf, mart=ensembl)
library(biomaRt)
#Get all the marts names
#listMarts()
#select a mart to obtain dataset
#ensembl <- useMart("ENSEMBL_MART_SNP")
#Dataset obtained
#listDatasets(ensembl)
#Choose Mart & Dataset so we can set filters
ensembl=useMart("ENSEMBL_MART_SNP", dataset= "hsapiens_snp")
#create filter list so we can check criteria
myfilters <- listFilters(ensembl)
#Make a vector for the filter
filter1 <- 'snp_filter'
#Attributes
attributes1 <- listAttributes(ensembl)
att1 <- c('refsnp_id', 'minor_allele', 'minor_allele_freq','phenotype_name','phenotype_description' )
rsdf1 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.txt')
rsdf <- rsdf1[1:200,]
rsdf
searchResults <- getBM(attributes=att1,
filters=filter1,
values=rsdf, mart=ensembl)
View(searchResults)
View(searchResults)
write.csv(searchResults, file='/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/rsid_1_200.csv',row.names=FALSE,na='', quote=FALSE)
#Import to clean
library(dplyr)
rsid200 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/rsid_1_200.csv')
rsid200a <- rsid200[complete.cases(rsid200), ]
#Import to clean
library(dplyr)
rsid200 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/rsid_1_200.csv')
rsid200a <- rsid200[complete.cases(rsid200), ]
rsid200a
#Import to clean
library(dplyr)
rsid200 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/rsid_1_200.csv')
rsid200
#rsid200a <- rsid200[complete.cases(rsid200), ]
#rsid200a
#Import to clean
library(dplyr)
rsid200 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/rsid_1_200.csv')
order(rsid200$phenotype_description, decreasing = FALSE)
#rsid200a <- rsid200[complete.cases(rsid200), ]
#rsid200a
#Import to clean
library(dplyr)
rsid200 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/rsid_1_200.csv')
rsid200[order(rsid200$phenotype_description, decreasing = FALSE)]
#Import to clean
library(dplyr)
rsid200 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/rsid_1_200.csv')
rsid200[order(rsid200$phenotype_description, )]
#Import to clean
library(dplyr)
rsid200 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/rsid_1_200.csv')
rsid200[order(rsid200$phenotype_description, )]
#Import to clean
library(dplyr)
rsid200 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/rsid_1_200.csv')
rsid200[order(rsid200$phenotype_description),]
#rsid200a <- rsid200[complete.cases(rsid200), ]
#rsid200a
#Import to clean
library(dplyr)
rsid200 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/rsid_1_200.csv')
rsid200[order(rsid200$phenotype_description),decreasing = FALSE]
rsid200[order(rsid200$phenotype_description),decreasing = FALSE]
#Import to clean
library(dplyr)
rsid200 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/rsid_1_200.csv')
rsid200[order(rsid200$phenotype_description),decreasing = FALSE]
#Import to clean
library(dplyr)
rsid200 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/rsid_1_200.csv')
rsid200[order(decreasing = FALSE, rsid200$phenotype_description),]
#rsid200a <- rsid200[complete.cases(rsid200), ]
#rsid200a
#Import to clean
library(dplyr)
rsid200 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/rsid_1_200.csv')
rsid200[order(decreasing = TRUE, rsid200$phenotype_description),]
#rsid200a <- rsid200[complete.cases(rsid200), ]
#rsid200a
#Import to clean
library(dplyr)
rsid200 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/rsid_1_200.csv')
rsid200_a <- rsid200[order(decreasing = TRUE, rsid200$phenotype_description),]
rsid200a <- rsid200_a[complete.cases(rsid200_a), ]
rsid200a
#Import to clean
library(dplyr)
rsid200 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/rsid_1_200.csv')
rsid200_a <- rsid200[order(decreasing = TRUE, rsid200$phenotype_description),]
rsid200a <- rsid200_a[complete.cases(rsid200_a$phenotype_description), ]
rsid200a
#Import to clean
library(dplyr)
rsid200 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/rsid_1_200.csv')
rsid200_a <- rsid200[order(decreasing = TRUE, rsid200$phenotype_description),]
rsid200a <- rsid200_a[complete.cases(rsid200_a$phenotype_description), ]
rsid200a
#Import to clean
library(dplyr)
rsid200 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/rsid_1_200.csv')
rsid200_a <- rsid200[order(decreasing = TRUE, rsid200$phenotype_description),]
rsid200_a
library(biomaRt)
#Get all the marts names
#listMarts()
#select a mart to obtain dataset
#ensembl <- useMart("ENSEMBL_MART_SNP")
#Dataset obtained
#listDatasets(ensembl)
#Choose Mart & Dataset so we can set filters
ensembl=useMart("ENSEMBL_MART_SNP", dataset= "hsapiens_snp")
#create filter list so we can check criteria
myfilters <- listFilters(ensembl)
#Make a vector for the filter
filter1 <- 'snp_filter'
#Attributes
attributes1 <- listAttributes(ensembl)
att1 <- c('refsnp_id','chr_name', 'minor_allele', 'minor_allele_freq','phenotype_name','phenotype_description' )
rsdf1 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.txt')
rsdf <- rsdf1[1:200,]
rsdf
searchResults <- getBM(attributes=att1,
filters=filter1,
values=rsdf, mart=ensembl)
View(searchResults)
View(searchResults)
library(biomaRt)
#Get all the marts names
#listMarts()
#select a mart to obtain dataset
#ensembl <- useMart("ENSEMBL_MART_SNP")
#Dataset obtained
#listDatasets(ensembl)
#Choose Mart & Dataset so we can set filters
ensembl=useMart("ENSEMBL_MART_SNP", dataset= "hsapiens_snp")
#create filter list so we can check criteria
myfilters <- listFilters(ensembl)
#Make a vector for the filter
filter1 <- 'snp_filter'
#Attributes
attributes1 <- listAttributes(ensembl)
att1 <- c('refsnp_id','snp','chr_name', 'minor_allele', 'minor_allele_freq','phenotype_name','phenotype_description' )
rsdf1 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.txt')
rsdf <- rsdf1[1:200,]
rsdf
searchResults <- getBM(attributes=att1,
filters=filter1,
values=rsdf, mart=ensembl)
library(biomaRt)
#Get all the marts names
#listMarts()
#select a mart to obtain dataset
#ensembl <- useMart("ENSEMBL_MART_SNP")
#Dataset obtained
#listDatasets(ensembl)
#Choose Mart & Dataset so we can set filters
ensembl=useMart("ENSEMBL_MART_SNP", dataset= "hsapiens_snp")
#create filter list so we can check criteria
myfilters <- listFilters(ensembl)
#Make a vector for the filter
filter1 <- 'snp_filter'
#Attributes
attributes1 <- listAttributes(ensembl)
att1 <- c('refsnp_id','snp','allele','chr_name', 'minor_allele', 'minor_allele_freq','associated_gene','phenotype_description' )
rsdf1 <- read.csv('/Users/f4L/Documents/GitHub/RStudioDataAnalysis/DNA/RSID2.txt')
rsdf <- rsdf1[1:200,]
rsdf
searchResults <- getBM(attributes=att1,
filters=filter1,
values=rsdf, mart=ensembl)
